/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ITagsRepo,
  ITagsRepoInterface,
} from "../../../contracts/TagRepo.sol/ITagsRepo";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tagId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tagUri",
        type: "string",
      },
    ],
    name: "TagCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "privateKey",
    outputs: [
      {
        internalType: "string",
        name: "encryptionKey",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "tagUris",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "encryptionKeys",
        type: "string[]",
      },
    ],
    name: "tagMulti",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tagUrl",
        type: "string",
      },
      {
        internalType: "string",
        name: "encryptionKey",
        type: "string",
      },
    ],
    name: "tagOne",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalTags",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ITagsRepo__factory {
  static readonly abi = _abi;
  static createInterface(): ITagsRepoInterface {
    return new utils.Interface(_abi) as ITagsRepoInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ITagsRepo {
    return new Contract(address, _abi, signerOrProvider) as ITagsRepo;
  }
}
