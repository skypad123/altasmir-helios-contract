/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IRecord,
  IRecordInterface,
} from "../../../contracts/Record.sol/IRecord";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "RecordSigned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tagTraceId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tagRepoAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tagId",
        type: "uint256",
      },
    ],
    name: "TagTraced",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "hasSigned",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "immutableFrom",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tagRepoAddress",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tagIds",
        type: "uint256[]",
      },
    ],
    name: "traceMultiTags",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tagRepoAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tagId",
        type: "uint256",
      },
    ],
    name: "traceOneTag",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IRecord__factory {
  static readonly abi = _abi;
  static createInterface(): IRecordInterface {
    return new utils.Interface(_abi) as IRecordInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IRecord {
    return new Contract(address, _abi, signerOrProvider) as IRecord;
  }
}
